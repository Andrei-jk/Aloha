@import "./res.css";

body {
  font-family: "Urbanist", sans-serif;
  font-weight: 400;
  background-color: #ffffff;
}

.container {
  max-width: 1180px;
  margin: 0 auto;
  padding: 0 10px;
}

.header {
  position: fixed;
  width: 100%;
  top: 0;
  left: 0;
  z-index: 50;
  background-color: #e78282;
}

.header::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: chartreuse;
  z-index: 2;
}

.header__logo {
  flex: 0 0 80px;
  border-radius: 50%;
  overflow: hidden;
  background-color: #fff;
  position: relative;
  z-index: 3;
}

.header__logo img {
  max-width: 100%;
  /* чтобы не было подрезания картинки display: block; */
  display: block;
  margin-left: 0;
}

.header__body-row {
  position: relative;
  /* z-index: 2; */
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 88px;
}

.header__list {
  display: flex;
  position: relative;
  z-index: 2;
}

.header__list li {
  margin: 0 0 0 20px;
}

.header__link {
  color: #f8f6f6;
  text-transform: uppercase;
  font-size: 18px;
}

.content {
  /* отступим контентом вниз, т к шапка накрыла его часть (выйдем из-под шапки) */
  padding: 110px 0 0 0;
}

.content__text {
  font-size: 18px;
  line-height: 20px;
}

.content__text p {
  margin: 0 0 20px 0;
  padding: 0 50px;
}

.header__burger {
  display: none;
}

/* адаптив */
@media (max-width: 769px) {
  body.unscroll {
    overflow: hidden;
  }

  .header__burger {
    /* кнопка */
    display: block;
    position: relative;
    width: 30px;
    height: 20px;
    z-index: 3;
    /* cursor: pointer;
    background-color: #fff; */
  }

  .header__body-row {
    height: 40px;
  }

  .header__logo {
    flex: 0 0 45px;
  }

  .header__burger span {
    background-color: #fff;
    position: absolute;
    width: 100%;
    height: 2px;
    left: 0;
    top: 9px;
    transition: all .3s ease-in;
  }

  .header__burger.active::before {
    transform: rotate(45deg);
    top: 9px;
  }

  .header__burger.active::after {
    transform: rotate(-45deg);
    bottom: 9px;
  }

  .header__burger.active span {
    transform: scale(0);
  }

  .header__burger::before,
  .header__burger::after {
    content: "";
    background-color: #fff;
    position: absolute;
    width: 100%;
    height: 2px;
    left: 0;
    transition: all .3s ease-in;
  }

  .header__burger::before {
    top: 0;
  }

  .header__burger::after {
    bottom: 0;
  }

  .header__menu {
    position: fixed;
    width: 100%;
    height: 100%;
    top: -190%;
    left: 0;
    background-color: #11abe7;
    padding: 60px 10px 20px 10px;
    transition: all .8s ease;
    overflow: auto;
  }

  .header__menu.active {
    top: 0;
  }

  .header__list {
    display: block;
  }

  .header__list li {
    margin: 0 0 150px 0;
  }

  .content {
    padding: 70px 0 0 0;
  }

  .header__list {
    max-width: 300px;
    margin: 0 auto;
    text-align: center;
  }

  .header__link {
    font-size: 45px;
  }
}

/* todo POPUP =====================================  */
.popup__area {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.8);
  opacity: 0;
  visibility: hidden;
  /* Предназначен для отображения или скрытия элемента, включая рамку вокруг него и фон. При скрытии элемента, хотя он и становится не виден, место, которое элемент занимает, остаётся за ним. 

      visible Отображает элемент как видимый.

      hidden Элемент становится невидимым или правильней сказать,полностью прозрачным, поскольку он продолжает участвовать в форматировании страницы.

      collapse Если это значение применяется не к строкам или колонкам таблицы, то результат его использования будет таким же,
      как hidden. В случае использования collapse для содержимого ячеек таблиц, то они реагируют, словно к ним было добавлено display: none. Иными словами, заданные строки и колонки убираются, а таблица перестраивается по новой. */

  /* при большом кол контента надо дописать в popup*/
  overflow-y: auto;
  overflow-x: hidden;
  transition: all 1s ease 0s;
}

.popup__area-close {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

.popup__area:target {
  opacity: 1;
  visibility: visible;
}
/* Для перехода к выбранному фрагменту документа,
в адресе пишется символ # и указывается имя идентификатора. К примеру,
в адресе http: //www.w3.org/TR/css3-selectors/#target-pseudo происходит переход к элементу, атрибут id которого задан как target-pseudo. Такая запись адреса называется «целевой элемент». Псевдокласс :target применяется к целевому элементу, иными словами, к идентификатору, который указан в адресной строке браузера. */
.popup__area:target .popup__content{
  /* transform: translate(0px, 0px); */
  transform: perspective(600px) translate(0px, 0%) rotateX(0deg);
  opacity: 1;
}
.popup__body-card {
  min-height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 30px 10px;
}

.popup__content {
  position: relative;
  background-color: #fff;
  color: #000;
  max-width: 800px;
  padding: 30px;
  margin-top: 90px;
  transition:all 1s ease 0s;
  opacity: 0;
  /* transform: translate(0px, -150%); */
  transform: perspective(600px) translate(0px,-150%) rotateX(45deg);
}

.popup__close-btn {
  position: absolute;
  right: 10px;
  top: 10px;
  font-size: 20px;
}

.popup__title-zagolovok {
  font-size: 40px;
  margin: 0 0 1em 0;
  font-weight: 700;
}

/* todo POPUP =====================================  */